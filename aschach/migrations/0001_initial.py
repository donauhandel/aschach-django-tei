# Generated by Django 3.0.3 on 2020-03-08 15:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vocabs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Angabe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('legacy_pk', models.IntegerField(blank=True, help_text='Primärschlüssel Alt', null=True, verbose_name='Primärschlüssel Alt')),
                ('datum_original', models.CharField(blank=True, help_text='Datum (als Text)', max_length=250, verbose_name='Datum (als Text)')),
                ('datum', models.DateField(blank=True, help_text='Datum', null=True, verbose_name='Datum')),
                ('quelle', models.CharField(blank=True, help_text='Quelle', max_length=250, verbose_name='Quelle')),
                ('bildnummern', models.CharField(blank=True, help_text='Bildnummern', max_length=250, verbose_name='Bildnummern')),
                ('bemerkungen', models.TextField(blank=True, help_text='Bemerkungen', null=True, verbose_name='Bemerkungen')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
            ],
            options={
                'verbose_name': 'Angabe',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Firma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('legacy_pk', models.IntegerField(blank=True, help_text='Primärschlüssel Alt', null=True, verbose_name='Primärschlüssel Alt')),
                ('name', models.CharField(blank=True, help_text='Firmenname', max_length=250, verbose_name='Firmenname')),
                ('bemerkungen', models.TextField(blank=True, help_text='Bemerkungen', null=True, verbose_name='Bemerkungen')),
                ('name_orig', models.CharField(blank=True, help_text='Name (originale Schreibweise)', max_length=250, verbose_name='Name (originale Schreibweise)')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
            ],
            options={
                'verbose_name': 'Firma',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Ladung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('legacy_pk', models.IntegerField(blank=True, help_text='Primärschlüssel Alt', null=True, verbose_name='Primärschlüssel Alt')),
                ('bemerkungen', models.TextField(blank=True, help_text='Bemerkungen', null=True, verbose_name='Bemerkungen')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
            ],
            options={
                'verbose_name': 'Ladung',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='NachName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('name', models.CharField(blank=True, help_text='Nachname', max_length=250, verbose_name='Nachname')),
                ('bemerkungen', models.TextField(blank=True, help_text='Bemerkungen', null=True, verbose_name='Bemerkungen')),
                ('name_orig', models.TextField(blank=True, help_text='Nachname (original)', null=True, verbose_name='Nachname (original)')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
            ],
            options={
                'verbose_name': 'Nachname',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('legacy_pk', models.IntegerField(blank=True, help_text='Primärschlüssel Alt', null=True, verbose_name='Primärschlüssel Alt')),
                ('name', models.CharField(blank=True, help_text='Ortsname', max_length=250, verbose_name='Ortsname')),
                ('bemerkungen', models.TextField(blank=True, help_text='Bemerkungen', null=True, verbose_name='Bemerkungen')),
                ('literatur', models.TextField(blank=True, help_text='Literatur', null=True, verbose_name='Literatur')),
                ('name_orig', models.CharField(blank=True, help_text='Name (originale Schreibweise)', max_length=250, verbose_name='Name (originale Schreibweise)')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
            ],
            options={
                'verbose_name': 'Ort',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('legacy_pk', models.IntegerField(blank=True, help_text='Primärschlüssel Alt', null=True, verbose_name='Primärschlüssel Alt')),
                ('bemerkungen', models.TextField(blank=True, help_text='Bemerkungen', null=True, verbose_name='Bemerkungen')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
            ],
            options={
                'verbose_name': 'Person',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PersonenBezeichnung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('legacy_py', models.IntegerField(blank=True, help_text='Primärschlüssel Alt', null=True, verbose_name='Primärschlüssel Alt')),
                ('bezeichnung', models.CharField(blank=True, help_text='Bezeichnung', max_length=250, verbose_name='Bezeichnung')),
                ('bemerkungen', models.TextField(blank=True, help_text='Bemerkungen', null=True, verbose_name='Bemerkungen')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
            ],
            options={
                'verbose_name': 'Personenbezeichnung',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('legacy_pk', models.IntegerField(blank=True, help_text='Primärschlüssel Alt', null=True, verbose_name='Primärschlüssel Alt')),
                ('name', models.CharField(blank=True, help_text='Name', max_length=250, verbose_name='Name')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
            ],
            options={
                'verbose_name': 'Region',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('legacy_pk', models.IntegerField(blank=True, help_text='Primärschlüssel Alt', null=True, verbose_name='Primärschlüssel Alt')),
                ('datei_name', models.CharField(blank=True, help_text='Dateiname', max_length=250, verbose_name='Dateiname')),
                ('ordner', models.CharField(blank=True, help_text='Ordner', max_length=250, verbose_name='Ordner')),
                ('phaidra_id', models.CharField(blank=True, help_text='Phaidra ID', max_length=250, verbose_name='Phaidra ID')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
            ],
            options={
                'verbose_name': 'Scan',
                'ordering': ['datei_name'],
            },
        ),
        migrations.CreateModel(
            name='VorName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('legacy_pk', models.IntegerField(blank=True, help_text='Primärschlüssel Alt', null=True, verbose_name='Primärschlüssel Alt')),
                ('name', models.CharField(blank=True, help_text='Vorname', max_length=250, verbose_name='Vorname')),
                ('bemerkungen', models.TextField(blank=True, help_text='Bemerkungen', null=True, verbose_name='Bemerkungen')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
            ],
            options={
                'verbose_name': 'Vorname',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Ware',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('legacy_pk', models.IntegerField(blank=True, help_text='Primärschlüssel Alt', null=True, verbose_name='Primärschlüssel Alt')),
                ('name', models.CharField(blank=True, help_text='Ware', max_length=250, verbose_name='Ware')),
                ('beschreibung', models.TextField(blank=True, help_text='Kurzbeschreibung', null=True, verbose_name='Kurzbeschreibung')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
            ],
            options={
                'verbose_name': 'Ware',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='WareLadung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('legacy_pk', models.IntegerField(blank=True, help_text='Primärschlüssel Alt', null=True, verbose_name='Primärschlüssel Alt')),
                ('anzahl', models.CharField(blank=True, help_text='Anzahl', max_length=250, verbose_name='Anzahl')),
                ('anzahl_original', models.CharField(blank=True, help_text='Anzahl (original)', max_length=250, verbose_name='Anzahl (original)')),
                ('maut_fl', models.IntegerField(blank=True, help_text='Maut (Gulden)', null=True, verbose_name='Maut (Gulden)')),
                ('maut_s', models.IntegerField(blank=True, help_text='Maut (Schilling)', null=True, verbose_name='Maut (Schilling)')),
                ('maut_d', models.IntegerField(blank=True, help_text='Maut (d)', null=True, verbose_name='Mauth (d)')),
                ('waren_order', models.IntegerField(blank=True, help_text='warenOrder', null=True, verbose_name='warenOrder')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
                ('einheit', models.ForeignKey(blank=True, help_text='Einheit', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_wareladung_einheit_skosconcept', to='vocabs.SkosConcept', verbose_name='Einheit')),
                ('ladung', models.ForeignKey(blank=True, help_text='Ladung', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_wareladung_ladung_ladung', to='aschach.Ladung', verbose_name='Ladung')),
                ('ware', models.ForeignKey(blank=True, help_text='Ware', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_wareladung_ware_ware', to='aschach.Ware', verbose_name='Ware')),
            ],
            options={
                'verbose_name': 'WareLadung',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PersonLadung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('legacy_pk', models.IntegerField(blank=True, help_text='Primärschlüssel Alt', null=True, verbose_name='Primärschlüssel Alt')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
                ('ladung', models.ForeignKey(blank=True, help_text='Ladung', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_personladung_ladung_ladung', to='aschach.Ladung', verbose_name='Ladung')),
                ('person', models.ForeignKey(blank=True, help_text='Person', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_personladung_person_person', to='aschach.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'PersonLadung',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PersonAngabe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('legacy_pk', models.IntegerField(blank=True, help_text='Primärschlüssel Alt', null=True, verbose_name='Primärschlüssel Alt')),
                ('bemerkungen', models.TextField(blank=True, help_text='Bemerkungen', null=True, verbose_name='Bemerkungen')),
                ('judenleibmaut_fl', models.IntegerField(blank=True, help_text='Judenleibmaut (Gulden)', null=True, verbose_name='Judenleibmaut (Gulden)')),
                ('judenleibmaut_s', models.IntegerField(blank=True, help_text='Judenleibmaut (Schilling)', null=True, verbose_name='Judenleibmaut (Schilling)')),
                ('judenleibmaut_d', models.IntegerField(blank=True, help_text='Judenleibmaut (d)', null=True, verbose_name='Judenleibmaut (d)')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
                ('angabe', models.ForeignKey(blank=True, help_text='Angabe', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_personangabe_angabe_angabe', to='aschach.Angabe', verbose_name='Angabe')),
                ('person', models.ForeignKey(blank=True, help_text='Person', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_personangabe_person_person', to='aschach.Person', verbose_name='Person')),
                ('zielort', models.ForeignKey(blank=True, help_text='Zielort Passagier', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_personangabe_zielort_ort', to='aschach.Ort', verbose_name='Zielort Passagier')),
            ],
            options={
                'verbose_name': 'PersonAngabe',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='person',
            name='bezeichnung',
            field=models.ForeignKey(blank=True, help_text='Bezeichnung', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_person_bezeichnung_personenbezeichnung', to='aschach.PersonenBezeichnung', verbose_name='Bezeichnung'),
        ),
        migrations.AddField(
            model_name='person',
            name='firma',
            field=models.ForeignKey(blank=True, help_text='Firma', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_person_firma_firma', to='aschach.Firma', verbose_name='Firma'),
        ),
        migrations.AddField(
            model_name='person',
            name='herkunft',
            field=models.ForeignKey(blank=True, help_text='Herkunftsort', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_person_herkunft_ort', to='aschach.Ort', verbose_name='Herkunftsort'),
        ),
        migrations.AddField(
            model_name='person',
            name='nachname',
            field=models.ForeignKey(blank=True, help_text='Nachname', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_person_nachname_nachname', to='aschach.NachName', verbose_name='Nachname'),
        ),
        migrations.AddField(
            model_name='person',
            name='verknuepft',
            field=models.ManyToManyField(blank=True, help_text='verknüpft', related_name='rvn_person_verknuepft_person', to='aschach.Person', verbose_name='verknüpft'),
        ),
        migrations.AddField(
            model_name='person',
            name='vorname',
            field=models.ForeignKey(blank=True, help_text='Vorname', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_person_vorname_vorname', to='aschach.VorName', verbose_name='Vorname'),
        ),
        migrations.AddField(
            model_name='ort',
            name='region',
            field=models.ForeignKey(blank=True, help_text='Region', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_ort_region_region', to='aschach.Region', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='ladung',
            name='personen',
            field=models.ManyToManyField(blank=True, help_text='Personen', related_name='rvn_fahrzeug_zielort_ort', through='aschach.PersonLadung', to='aschach.Person', verbose_name='Personen'),
        ),
        migrations.AddField(
            model_name='ladung',
            name='waren',
            field=models.ManyToManyField(blank=True, help_text='Waren', related_name='rvn_fahrzeug_zielort_ort', through='aschach.WareLadung', to='aschach.Ware', verbose_name='Waren'),
        ),
        migrations.AddField(
            model_name='ladung',
            name='zielort',
            field=models.ManyToManyField(blank=True, help_text='Zielort der Ladung', related_name='rvn_ladung_zielort_ort', to='aschach.Ort', verbose_name='Zielort der Ladung'),
        ),
        migrations.CreateModel(
            name='Fahrzeug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='Legacy ID')),
                ('legacy_pk', models.IntegerField(blank=True, help_text='Primärschlüssel Alt', null=True, verbose_name='Primärschlüssel Alt')),
                ('bemerkungen', models.TextField(blank=True, help_text='Bemerkungen', null=True, verbose_name='Bemerkungen')),
                ('anzahl_pferde', models.IntegerField(blank=True, help_text='Anzahl der Pferde', null=True, verbose_name='Anzahl der Pferde')),
                ('orig_data_csv', models.TextField(blank=True, null=True, verbose_name='The original data')),
                ('fahrtrichtung', models.ForeignKey(blank=True, help_text='Fahrtrichtung', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_fahrzeug_fahrtrichtung_skosconcept', to='vocabs.SkosConcept', verbose_name='Fahrtrichtung')),
                ('herkunft', models.ForeignKey(blank=True, help_text='Herkunftsort', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_fahrzeug_herkunft_ort', to='aschach.Ort', verbose_name='Herkunftsort')),
                ('person', models.ForeignKey(blank=True, help_text='Personen', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_fahrzeug_person_person', to='aschach.Person', verbose_name='Personen')),
                ('region', models.ForeignKey(blank=True, help_text='Region', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_fahrzeug_region_ort', to='aschach.Ort', verbose_name='Region')),
                ('zielort', models.ForeignKey(blank=True, help_text='Zielort', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rvn_fahrzeug_zielort_ort', to='aschach.Ort', verbose_name='Zielort')),
            ],
            options={
                'verbose_name': 'Fahrzeug',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='angabe',
            name='fahrzeug',
            field=models.ManyToManyField(blank=True, help_text='Fahrzeuge', related_name='rvn_angabe_fahrzeug_fahrzeug', to='aschach.Fahrzeug', verbose_name='Fahrzeuge'),
        ),
        migrations.AddField(
            model_name='angabe',
            name='ladung',
            field=models.ManyToManyField(blank=True, help_text='Ladung', related_name='rvn_angabe_ladung_ladung', to='aschach.Ladung', verbose_name='Ladung'),
        ),
        migrations.AddField(
            model_name='angabe',
            name='passagiere',
            field=models.ManyToManyField(blank=True, help_text='Passagiere', related_name='rvn_angabe_ladung_ladung', through='aschach.PersonAngabe', to='aschach.Person', verbose_name='Passagiere'),
        ),
        migrations.AddField(
            model_name='angabe',
            name='scan',
            field=models.ManyToManyField(blank=True, help_text='Scan', related_name='rvn_angabe_scan_scan', to='aschach.Scan', verbose_name='Scan'),
        ),
    ]
